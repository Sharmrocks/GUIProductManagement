		import java.util.*;
		
		//This program will allow the user to add product, view inventory, delete a product, sell a product, show 
		//total sales and exit the program. a product management system is a software tool used by businesses to 
		//manage their products and related data.
		//This can include information such as product name, price, quantity, and other details. 
		//With this tool, users can perform a variety of tasks such as adding new products, viewing the current inventory, 
		//deleting products that are no longer needed, and selling products to customers. 
		//The system can also keep track of sales and calculate the total revenue generated by the business. 
		//This information can be used by the business to make informed decisions about inventory, pricing, and other aspects of their operations.
		
		
		
		// Product class with basic attributes and methods
		class Product
			{
			 	String name;    // name of the product
			    double price;   // price of the product
			    int quantity;   // quantity of the product
				
			    // constructor to initialize the object
				Product(String name, double price, int quantity)
				{
					this.name = name;
			        this.price = price;
			        this.quantity = quantity;
				}
				
				
				// getter method for name
				String getName()
				{
					return name;
				}
				

			    // getter method for price
				double getPrice()
				{
					return price;
				}
				
				 // getter method for quantity
				int getQuantity()
				{
					return quantity;
				}
				
				// setter method for price
				void setPrice(double price)
				{
					 this.price = price;
				}
				

			    // setter method for quantity
				void setQuantity(int quantity)
				{
					this.quantity = quantity;
				}
				

			    // method to sell a certain quantity of the product
				boolean sell(int quantity)
				 {
					 if (this.quantity < quantity)
					 	{
						 	System.out.println("Error: Not enough inventory.");
				            return false;
					 	}
					 else
					 	{
						 	this.quantity -= quantity;
				            return true;
					 	}
				 }
				
			}
		

		// DiscountedProduct class that inherits from Product
		class DiscountedProduct extends Product
			{
				 double discountPercentage;// discount percentage of the product
				 
				 
				// constructor to initialize the object
				 DiscountedProduct(String name, double price, int quantity, double discountPercentage)
				 {
					 super(name, price, quantity);
				     this.discountPercentage = discountPercentage;
				 }
				 
				 // getter method for discount percentage
				 double getDiscountPercentage()
				 {
					 return discountPercentage;
				 }
				 
				 // getter method for discounted price
				 double getDiscountedPrice()
				 {
					 return getPrice() * (1 - discountPercentage / 100);
				 }
			}
		
		// ProductManager class that manages the inventory of products
		class ProductManager 
			{
				Product[] inventory;    // array to store the products
			    int size;   // number of products in the inventory
			    double totalSales;  // total sales of all the products
				
			 // constructor to initialize the object
			    ProductManager() 
			    {
			        inventory = new Product[10];  // initialize the inventory with a fixed size of 10
			        size = 0;
			        totalSales = 0;
			    }
		
			    // method to add a new product to the inventory
			    void addProduct() 
			    {
			        Scanner scanner = new Scanner(System.in);
		
			        System.out.print("Enter the name of the product    : ");
			        String name = scanner.nextLine();
		
			        // Check if name is empty
			        if (name.isEmpty())
			        {
			            System.out.println("Error: You must enter a name for the product.");
			            return;
			        }
		
			        System.out.print("Enter the price of the product   : ");
			        double price = 0;
			        try 
			        {
			            price = scanner.nextDouble();
			        } 
			        catch (InputMismatchException e) 
			        {
			            System.out.println("Error: Price must be a number.");
			            return;
			        }
		
			        System.out.print("Enter the quantity of the product: ");
			        int quantity = 0;
			        try {
			            quantity = scanner.nextInt();
			        } 
			        catch (InputMismatchException e) 
			        {
			            System.out.println("Error: Quantity must be a whole number.");
			            return;
			        }
			        scanner.nextLine(); // Consume newline character
		
			        System.out.print("Is this a discounted product? (y/n): ");
			        String answer = scanner.nextLine();
		
			        if (answer.equalsIgnoreCase("y")) 
			        {
			            System.out.print("Enter the discount percentage: ");
			            double discountPercentage = 0;
			            try 
			            {
			                discountPercentage = scanner.nextDouble();
			            } 
			            catch (InputMismatchException e) 
			            {
			                System.out.println("Error: Discount percentage must be a number.");
			                return;
			            }
			            scanner.nextLine();
		
			            inventory[size++] = new DiscountedProduct(name, price, quantity, discountPercentage);
			        } 
			        else 
			        {
			            inventory[size++] = new Product(name, price, quantity);
			        }
			    }
		// method to View product to the inventory	
		void viewInventory() 
		{
			System.out.println("=================");
		    System.out.println("Product Inventory");
		    System.out.println("=================");
		    for (int i = 0; i < size; i++) 
		    {
		        Product product = inventory[i];
		        System.out.println("Product Name = " + product.getName() + "\nProduct Quantity = " + product.getQuantity()
		                + "\nProduct Price = ₱" + product.getPrice());
		        if (product instanceof DiscountedProduct) 
		        {
		            DiscountedProduct discountedProduct = (DiscountedProduct) product;
		            System.out.println("Discount Percentage = " + discountedProduct.getDiscountPercentage() + "%"
		                    + "\nDiscounted Price = ₱" + discountedProduct.getDiscountedPrice());
		        }
		      
		    }
		}
		
		// method to delete a product to the inventory
		void deleteProduct() 
		
			{
			    Scanner scanner = new Scanner(System.in);
			    System.out.print("Enter the name of the product to delete : ");
			    String name = scanner.nextLine();
			    for (int i = 0; i < size; i++) 
			    	{
				        if (inventory[i].getName().equals(name))
				        	{
					            inventory[i] = inventory[size - 1];
					            inventory[size - 1] = null;
					            size--;
					            System.out.println("Product deleted.");
					            return;
				            }
			    	}
			            System.out.println("Product not found.");
			}
		
		// method to sell a product 
		void sellProduct() 
			{
			    Scanner scanner = new Scanner(System.in);
			    System.out.print("Enter the name of the product to sell : ");
			    String name = scanner.nextLine();
			    
			    for (int i = 0; i < size; i++) 
			    {
			        if (inventory[i].getName().equals(name))
			        	{
				            System.out.print("Enter the quantity to sell : ");
				            int quantity = scanner.nextInt();
				            scanner.nextLine();
				            if (inventory[i].sell(quantity)) 
				            {
				                double price;
				                if (inventory[i] instanceof DiscountedProduct) 
				                	{
					                    DiscountedProduct discountedProduct = (DiscountedProduct) inventory[i];
					                    price = discountedProduct.getDiscountedPrice();
				                	} 
				                else 
					                {
					                    price = inventory[i].getPrice();
					                }
				                totalSales += price * quantity;
				                System.out.println("Sale completed. \n	Total Price = ₱" + price * quantity);
				            }
				            return;
			        	}
			    }
			    
			    System.out.println("Product not found.");
			}
		
		// method to view total sales 
		void viewTotalSales() 
			{
				System.out.println("Total Sales: ₱" + totalSales);
			}
			}
		
		// This class is the main class which runs the product management system.
		class ProductM
			{
			
			// The main method where the program starts execution.
			public static void main(String[] args) 
				{
				// Create a new ProductManager object to manage the products.
		        ProductManager manager = new ProductManager();
		        
		     // Create a new scanner object to read user input.
		        Scanner scanner = new Scanner(System.in);
		        
		     // Loop indefinitely to allow the user to keep interacting with the system.
		        while (true)
		        	{
		        	// Display the menu options to the user.
				        System.out.println("☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻");
				        System.out.println("Product Management");
				        System.out.println("☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻☻");
				        System.out.println("1. Add product");
				        System.out.println("2. View inventory");
				        System.out.println("3. Delete product");
				        System.out.println("4. Sell product");
				        System.out.println("5. View total sales");
				        System.out.println("6. Exit");
				        System.out.print("╔═══════════════╗\n");
				        System.out.print("Enter your choice ");
				        System.out.print("\n╚═══════════════╝\n");
				     // Read the user's choice.
				        System.out.print("HERE! »»");
		
				        int choice = 0;
						while (true) {
							try {
								String input = scanner.nextLine();
								choice = Integer.parseInt(input);
								break;
							} catch (NumberFormatException e) {
								System.out.println("Invalid input! Please enter a number.");
							}
						}
				     // Switch statement to handle user's choice.
				        switch (choice) 
				        {
				    
						        case 1:
						        	// If the user chooses to add a product, call the addProduct method of the ProductManager object.
						        manager.addProduct();
						        break;
						        
						
						        case 2:
						        	// If the user chooses to view inventory, call the viewInventory method of the ProductManager object.
						        manager.viewInventory();
						        break;
						     
						        case 3:
						        	// If the user chooses to delete a product, call the deleteProduct method of the ProductManager object.
						        manager.deleteProduct();
						        break;
						        
						    
						        case 4:
						        	// If the user chooses to sell a product, call the sellProduct method of the ProductManager object.
						        manager.sellProduct();
						        break;
						    
						        case 5:
						       // If the user chooses to view total sales, call the viewTotalSales method of the ProductManager object.
						        manager.viewTotalSales();
						        break;
						        
						        case 6:
						        	// If the user chooses to exit, display a thank you message and exit the program.
						        System.out.println("\n♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡");
						        System.out.println("THANK YOU FOR USING PRODUCT MANAGEMENT!!");
						        System.out.println("♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡");
						        default:
						        System.out.println("");
				        }
		        	}
				}
			}